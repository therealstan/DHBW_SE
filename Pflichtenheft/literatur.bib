
@online{_class_????,
	title = {class - How do I prove or disprove "god" objects are wrong? - Programmers Stack Exchange},
	url = {http://programmers.stackexchange.com/questions/178317/how-do-i-prove-or-disprove-god-objects-are-wrong},
	shorttitle = {class - How do I prove or disprove "god" objects are wrong?},
	urldate = {2014-09-25},
	file = {Snapshot:C\:\\Users\\Stanislav\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\rhwoh627.default\\zotero\\storage\\86RD969U\\class - How do I prove or disprove god objects a.html:text/html}
}

@book{goll_architektur-_2014,
	location = {S.l.},
	edition = {Auflage: 2., aktualisierte Aufl. 2014},
	title = {Architektur- und Entwurfsmuster der Softwaretechnik: Mit lauffähigen Beispielen in Java},
	isbn = {9783658055318},
	shorttitle = {Architektur- und Entwurfsmuster der Softwaretechnik},
	abstract = {Architekturen von Softwaresystemen sollen einfach erweiterbar und weitestgehend standardisiert sein, damit die Entwickler sich leicht über Architekturen austauschen können. Für den objektorientierten Entwurf haben sich zahlreiche wertvolle Architektur- und Entwurfsmuster herausgebildet. Diese Muster basieren auf objektorientier­­ten Prinzipien wie dem Prinzip der Dependency Inversion. Daher werden zuerst die wichtig­sten objektorientierten Prinzipien erklärt. Anschließend wird gezeigt, wie diese objektorientierten Prinzipien in den verschie­denen Architektur- und Entwurfs­mustern umgesetzt werden. Alle vorgestellten Mus­ter werden durch lauffähige Bei­spiele in Java illustriert.},
	pagetotal = {406},
	publisher = {Springer Vieweg},
	author = {Goll, Joachim},
	date = {2014}
}

@incollection{lewis_understanding_2014,
	title = {Understanding Design Patterns},
	rights = {©2014 Apress},
	isbn = {978-1-4302-6421-7, 978-1-4302-6422-4},
	url = {http://link.springer.com/chapter/10.1007/978-1-4302-6422-4_3},
	abstract = {This chapter is all about design patterns: what they are and what they mean. The knowledge you’ll get here will provide you with the insight to understand where the motivational design pattern library comes from and how you can create your own patterns.},
	pages = {21--32},
	booktitle = {Irresistible Apps},
	publisher = {Apress},
	author = {Lewis, Chris},
	urldate = {2014-09-19},
	date = {2014-01-01},
	langid = {english},
	keywords = {Software Engineering/Programming and Operating Systems, User Interfaces and Human Computer Interaction},
	file = {Full Text PDF:C\:\\Users\\Stanislav\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\rhwoh627.default\\zotero\\storage\\TNAHBMFU\\Lewis - 2014 - Understanding Design Patterns.pdf:application/pdf;Snapshot:C\:\\Users\\Stanislav\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\rhwoh627.default\\zotero\\storage\\9NKWB4CN\\978-1-4302-6422-4_3.html:text/html}
}

@book{alexander_pattern_1978,
	location = {New York},
	title = {A Pattern Language: Towns, Buildings, Construction},
	isbn = {9780195019193},
	shorttitle = {A Pattern Language},
	abstract = {You can use this book to design a house for yourself with your family; you can use it to work with your neighbors to improve your town and neighborhood; you can use it to design an office, or a workshop, or a public building. And you can use it to guide you in the actual process of construction. After a ten-year silence, Christopher Alexander and his colleagues at the Center for Environmental Structure are now publishing a major statement in the form of three books which will, in their words, "lay the basis for an entirely new approach to architecture, building and planning, which will we hope replace existing ideas and practices entirely." The three books are The Timeless Way of Building, The Oregon Experiment, and this book, A Pattern Language. At the core of these books is the idea that people should design for themselves their own houses, streets, and communities. This idea may be radical (it implies a radical transformation of the architectural profession) but it comes simply from the observation that most of the wonderful places of the world were not made by architects but by the people. At the core of the books, too, is the point that in designing their environments people always rely on certain "languages," which, like the languages we speak, allow them to articulate and communicate an infinite variety of designs within a forma system which gives them coherence. This book provides a language of this kind. It will enable a person to make a design for almost any kind of building, or any part of the built environment. "Patterns," the units of this language, are answers to design problems (How high should a window sill be? How many stories should a building have? How much space in a neighborhood should be devoted to grass and trees?). More than 250 of the patterns in this pattern language are given: each consists of a problem statement, a discussion of the problem with an illustration, and a solution. As the authors say in their introduction, many of the patterns are archetypal, so deeply rooted in the nature of things that it seemly likely that they will be a part of human nature, and human action, as much in five hundred years as they are today.},
	pagetotal = {1171},
	publisher = {Oxford University Press},
	author = {Alexander, Christopher},
	date = {1978-08-17}
}

@video{google_developers_google_2009,
	title = {Google I/O 2009 - Best Practices for Architecting {GWT} App},
	url = {http://www.youtube.com/watch?v=PDuhR18-EdM&feature=youtube_gdata_player},
	abstract = {Google I/O 2009 - Google Web Toolkit Architecture: Best Practices For Architecting Your {GWT} App

Ray Ryan

Google Web Toolkit provides the infrastructure you need to build a high performance web application and leaves the architecture open to fit your needs. Learn from others who have gone before. In this session we'll discuss best practices that real web applications are using to achieve high performance event handling, {UI} creation, and more.

For presentation slides and all I/O sessions, please go to: code.google.com/events/io/sessions.html},
	editora = {{Google Developers}},
	editoratype = {collaborator},
	urldate = {2014-09-25},
	date = {2009-06-01}
}

@book{starke_patterns_2013,
	location = {Berlin},
	edition = {Auflage: 4. Aufl. 2013},
	title = {Patterns kompakt: Entwurfsmuster für effektive Software-Entwicklung},
	isbn = {9783642347177},
	shorttitle = {Patterns kompakt},
	abstract = {Patterns kompakt fasst die wichtigsten Entwurfsmuster zusammen, die Sie für Software-Entwicklung benötigen. Software-Entwickler, -Architekten und -Designer finden darin effektiv anwendbare Lösungen für tägliche Entwurfsprobleme. Die vierte Auflage wurde  um aktuelle Patterns erweitert und komplett überarbeitet. Das Buch gliedert Patterns anhand typischer Aspekte des Software-Entwurfs: Basismuster für mehr Flexibilität und Wartbarkeit, Präsentation, Kommunikation und Verteilung, Integration und Persistenz. Patterns kompakt richtet sich an Praktiker: Software-Entwickler, -Designer, -Architekten und alle, die einen praxisorientierten Überblick zu Entwurfsmustern benötigen.},
	pagetotal = {223},
	publisher = {Springer Vieweg},
	author = {Starke, Gernot},
	date = {2013}
}

@book{buschmann_pattern-orientierte_1998,
	location = {Bonn u.a.},
	edition = {Auflage: 2. Aufl.},
	title = {Pattern-orientierte Software-Architektur . Ein Pattern-System},
	isbn = {9783827312822},
	abstract = {Der Gewinner des "Software Productivity Award" 1996!Das Buch beschreibt neue Patterns im Detail und organisiert sie zu Pattern-Systemen. Ein Pattern-System stellt eine Menge konkreter Patterns bereit und zeigt darüber hinaus, wie diese zur Erstellung großer Software-Systeme zu komplexen Strukturen zusammengefügt werden koennen. Die beschriebenen Patterns umfassen mehrere Abstraktionsebenen, von grundlegenden Architektur-Patterns über feingranularere Design Patterns bis hin zu programmiersprachenspezifischen Idiomen. Übersetzung aus dem Amerikanischen von Christiane Löckenhoff},
	pagetotal = {480},
	publisher = {Addison-Wesley},
	author = {Buschmann, Frank},
	date = {1998-01-15}
}

@book{martin_agile_2006,
	edition = {Auflage: 1},
	title = {Agile Principles, Patterns, and Practices in C\#},
	pagetotal = {768},
	publisher = {Prentice Hall},
	author = {Martin, Robert C.},
	date = {2006-07-20}
}

@book{booker_seven_2005,
	location = {London ; New York},
	title = {The Seven Basic Plots: Why We Tell Stories},
	isbn = {9780826480378},
	shorttitle = {The Seven Basic Plots},
	abstract = {Breathtaking in its scope and originality, "Seven Basic Plots" examines the basis of story telling in literature, film, and libretto. No one will ever see stories in the same way again. This remarkable and monumental book at last provides a comprehensive answer to the age-old riddle of whether there are only a small number of 'basic stories' in the world. Using a wealth of examples, from ancient myths and folk tales via the plays and novels of great literature to the popular movies and {TV} soap operas of today, it shows that there are seven archetypal themes which recur throughout every kind of storytelling. But this is only the prelude to an investigation into how and why we are 'programmed' to imagine stories in these ways, and how they relate to the inmost patterns of human psychology. Drawing on a vast array of examples, from Proust to detective stories, from the Marquis de Sade to E.T., Christopher Booker then leads us through the extraordinary changes in the nature of storytelling over the past 200 years, and why so many stories have 'lost the plot' by losing touch with their underlying archetypal purpose. Booker analyses why evolution has given us the need to tell stories and illustrates how storytelling has provided a uniquely revealing mirror to mankind's psychological development over the past 5000 years. This seminal book opens up in an entirely new way our understanding of the real purpose storytelling plays in our lives, and will be a talking point for years to come.},
	pagetotal = {736},
	publisher = {Bloomsbury Academic},
	author = {Booker, Christopher},
	date = {2005-11-10}
}

@book{gamma_design_1994,
	location = {Reading, Mass},
	edition = {Auflage: 1st ed., Reprint.},
	title = {Design Patterns. Elements of Reusable Object-Oriented Software.},
	isbn = {9780201633610},
	abstract = {* Capturing a wealth of experience about the design of object-oriented software, four top-notch designers present a catalog of simple and succinct solutions to commonly occurring design problems. Previously undocumented, these 23 patterns allow designers to create more flexible, elegant, and ultimately reusable designs without having to rediscover the design solutions themselves. * The authors begin by describing what patterns are and how they can help you design object-oriented software. They then go on to systematically name, explain, evaluate, and catalog recurring designs in object-oriented systems. With Design Patterns as your guide, you will learn how these important patterns fit into the software development process, and how you can leverage them to solve your own design problems most efficiently.},
	pagetotal = {395},
	publisher = {Prentice Hall},
	author = {Gamma, Erich and Helm, Richard and Vlissides, John},
	date = {1994}
}

@inreference{_qvt_2014,
	title = {{QVT}},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {http://en.wikipedia.org/w/index.php?title=QVT&oldid=619106515},
	abstract = {{QVT} (Query/View/Transformation) is a standard set of languages for model transformation defined by the Object Management Group.[1]},
	booktitle = {Wikipedia, the free encyclopedia},
	urldate = {2014-09-19},
	date = {2014-09-14},
	langid = {english},
	note = {Page Version {ID}: 619106515},
	file = {Snapshot:C\:\\Users\\Stanislav\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\rhwoh627.default\\zotero\\storage\\5J3FG9AA\\2014 - QVT.html:text/html}
}

@book{mowbray_antipatterns:_1998,
	location = {New York},
	edition = {1 edition},
	title = {{AntiPatterns}: Refactoring Software, Architectures, and Projects in Crisis},
	isbn = {9780471197133},
	shorttitle = {{AntiPatterns}},
	abstract = {"The {AntiPatterns} authors have clearly been there and done that when it comes to managing software development efforts. I resonated with one insight after another, having witnessed too many wayward projects myself. The experience in this book is palpable." -John Vlissides, {IBM} Research "This book allows managers, architects, and developers to learn from the painful mistakes of others. The high-level {AntiPatterns} on software architecture are a particularly valuable contribution to software engineering. Highly recommended!" -Kyle Brown Author of The Design Patterns Smalltalk Companion "{AntiPatterns} continues the trend started in Design Patterns. The authors have discovered and named common problem situations resulting from poor management or architecture control, mistakes which most experienced practitioners will recognize. Should you find yourself with one of the {AntiPatterns}, they even provide some clues on how to get yourself out of the situation." -Gerard Meszaros, Chief Architect, Object Systems Group Are you headed into the software development mine field? Follow someone if you can, but if you're on your own-better get the map! {AntiPatterns} is the map. This book helps you navigate through today's dangerous software development projects. Just look at the statistics:* Nearly one-third of all software projects are cancelled.* Two-thirds of all software projects encounter cost overruns in excess of 200\%.* Over 80\% of all software projects are deemed failures.While patterns help you to identify and implement procedures, designs, and codes that work, {AntiPatterns} do the exact opposite; they let you zero-in on the development detonators, architectural tripwires, and personality booby traps that can spell doom for your project. Written by an all-star team of object-oriented systems developers, {AntiPatterns} identifies 40 of the most common {AntiPatterns} in the areas of software development, architecture, and project management. The authors then show you how to detect and defuse {AntiPatterns} as well as supply refactored solutions for each {AntiPattern} presented.},
	pagetotal = {336},
	publisher = {Wiley},
	author = {Mowbray, Thomas J.},
	date = {1998-04-03}
}

@book{meyer_object-oriented_1998,
	location = {Upper Saddle River, N.J},
	edition = {Auflage: 2.},
	title = {Object-Oriented Software Construction 2Ed},
	isbn = {9780136291558},
	abstract = {Textverarbeitung leicht gemacht mit dem neuen Word 2003 und dem bewährten Easy-Konzept für Einsteiger! Auf der Basis eines Grundlagen-kapitels können Sie mit dem Workshop arbeiten, den Sie gerade benöti-gen: Vom einfachen Gestalten von Texten, über Briefe und Serienbriefe bis zu Tabellen, Fußnoten und Seitenzahlen lernen Sie alles, was Sie für die Praxis brauchen. Natürlich mit den neuen {XML}-Möglichkeiten.},
	pagetotal = {1254},
	publisher = {Prentice Hall},
	author = {Meyer, Bertrand},
	date = {1998-11-02}
}